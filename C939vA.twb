<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.20.1106.0321                               -->
<workbook original-version='18.1' source-build='2020.4.0 (20204.20.1106.0321)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='C939vA' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2019-2020 flights' inline='true' name='federated.0oidg8i12oxi9g1f6skd01ft345g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2019-2020 flights' name='textscan.1d2u8gg07i69rn10q0lcc1lv3fo4'>
            <connection class='textscan' directory='C:/Users/QUEVEKX/OneDrive - Abbott/Desktop/Karina&apos;s Files/Western Governors - BA in DMDA/C939' filename='2019-2020 flightsv2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1d2u8gg07i69rn10q0lcc1lv3fo4' name='2019-2020 flightsv2.csv' table='[2019-2020 flightsv2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='YEAR' ordinal='0' />
            <column datatype='integer' name='MONTH' ordinal='1' />
            <column datatype='string' name='MonthName' ordinal='2' />
            <column datatype='string' name='CARRIER' ordinal='3' />
            <column datatype='string' name='CARRIER_NAME' ordinal='4' />
            <column datatype='string' name='AIRPORT' ordinal='5' />
            <column datatype='string' name='AIRPORT_NAME' ordinal='6' />
            <column datatype='integer' name='ARR_FLIGHTS' ordinal='7' />
            <column datatype='integer' name='ARR_DEL15' ordinal='8' />
            <column datatype='real' name='CARRIER_CT' ordinal='9' />
            <column datatype='real' name='WEATHER_CT' ordinal='10' />
            <column datatype='real' name='NAS_CT' ordinal='11' />
            <column datatype='real' name='SECURITY_CT' ordinal='12' />
            <column datatype='real' name='LATE_AIRCRAFT_CT' ordinal='13' />
            <column datatype='integer' name='ARR_CANCELLED' ordinal='14' />
            <column datatype='integer' name='ARR_DIVERTED' ordinal='15' />
            <column datatype='integer' name='ARR_DELAY' ordinal='16' />
            <column datatype='integer' name='CARRIER_DELAY' ordinal='17' />
            <column datatype='integer' name='WEATHER_DELAY' ordinal='18' />
            <column datatype='integer' name='NAS_DELAY' ordinal='19' />
            <column datatype='integer' name='SECURITY_DELAY' ordinal='20' />
            <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1d2u8gg07i69rn10q0lcc1lv3fo4' name='2019-2020 flightsv2.csv' table='[2019-2020 flightsv2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='YEAR' ordinal='0' />
            <column datatype='integer' name='MONTH' ordinal='1' />
            <column datatype='string' name='MonthName' ordinal='2' />
            <column datatype='string' name='CARRIER' ordinal='3' />
            <column datatype='string' name='CARRIER_NAME' ordinal='4' />
            <column datatype='string' name='AIRPORT' ordinal='5' />
            <column datatype='string' name='AIRPORT_NAME' ordinal='6' />
            <column datatype='integer' name='ARR_FLIGHTS' ordinal='7' />
            <column datatype='integer' name='ARR_DEL15' ordinal='8' />
            <column datatype='real' name='CARRIER_CT' ordinal='9' />
            <column datatype='real' name='WEATHER_CT' ordinal='10' />
            <column datatype='real' name='NAS_CT' ordinal='11' />
            <column datatype='real' name='SECURITY_CT' ordinal='12' />
            <column datatype='real' name='LATE_AIRCRAFT_CT' ordinal='13' />
            <column datatype='integer' name='ARR_CANCELLED' ordinal='14' />
            <column datatype='integer' name='ARR_DIVERTED' ordinal='15' />
            <column datatype='integer' name='ARR_DELAY' ordinal='16' />
            <column datatype='integer' name='CARRIER_DELAY' ordinal='17' />
            <column datatype='integer' name='WEATHER_DELAY' ordinal='18' />
            <column datatype='integer' name='NAS_DELAY' ordinal='19' />
            <column datatype='integer' name='SECURITY_DELAY' ordinal='20' />
            <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MonthName]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>MonthName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CARRIER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CARRIER]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>CARRIER</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CARRIER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CARRIER_NAME]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>CARRIER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT_NAME]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>AIRPORT_NAME</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_FLIGHTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARR_FLIGHTS]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>ARR_FLIGHTS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_DEL15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARR_DEL15]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>ARR_DEL15</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CARRIER_CT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CARRIER_CT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>CARRIER_CT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_CT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WEATHER_CT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>WEATHER_CT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAS_CT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NAS_CT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>NAS_CT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_CT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SECURITY_CT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>SECURITY_CT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_CT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATE_AIRCRAFT_CT]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>LATE_AIRCRAFT_CT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_CANCELLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARR_CANCELLED]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>ARR_CANCELLED</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_DIVERTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARR_DIVERTED]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>ARR_DIVERTED</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARR_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>ARR_DELAY</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CARRIER_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CARRIER_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>CARRIER_DELAY</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WEATHER_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>WEATHER_DELAY</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAS_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NAS_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>NAS_DELAY</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SECURITY_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>SECURITY_DELAY</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
            <parent-name>[2019-2020 flightsv2.csv]</parent-name>
            <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[AIRPORT_NAME]' role='dimension' type='nominal' />
      <column caption='Arrivals Cancellation' datatype='integer' name='[ARR_CANCELLED]' role='measure' type='quantitative' />
      <column caption='Arr Del15' datatype='integer' name='[ARR_DEL15]' role='measure' type='quantitative' />
      <column caption='Late Arrival Delay' datatype='integer' name='[ARR_DELAY]' role='measure' type='quantitative' />
      <column caption='Arr Diverted' datatype='integer' name='[ARR_DIVERTED]' role='measure' type='quantitative' />
      <column caption='Arr Flights' datatype='integer' name='[ARR_FLIGHTS]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[CARRIER]' role='dimension' type='nominal' />
      <column caption='Carrier Cancellation' datatype='real' name='[CARRIER_CT]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='integer' name='[CARRIER_DELAY]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[CARRIER_NAME]' role='dimension' type='nominal' />
      <column caption='MonthName' datatype='datetime' name='[Calculation_768145279252803603]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATETIME([MONTH])' />
      </column>
      <column caption='Late Aircraft Cancellation' datatype='real' name='[LATE_AIRCRAFT_CT]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
      <column caption='NAS Cancellation' datatype='real' name='[NAS_CT]' role='measure' type='quantitative' />
      <column caption='Air Systems Delay' datatype='integer' name='[NAS_DELAY]' role='measure' type='quantitative' />
      <column caption='Security Cancellation' datatype='real' name='[SECURITY_CT]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
      <column caption='Weather Cancellation' datatype='real' name='[WEATHER_CT]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='2019-2020 flightsv2.csv' datatype='table' name='[__tableau_internal_object_id__].[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]' role='measure' type='quantitative' />
      <column-instance column='[ARR_CANCELLED]' derivation='Avg' name='[avg:ARR_CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARR_DELAY]' derivation='Avg' name='[avg:ARR_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CARRIER_CT]' derivation='Avg' name='[avg:CARRIER_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CARRIER_DELAY]' derivation='Avg' name='[avg:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_CT]' derivation='Avg' name='[avg:LATE_AIRCRAFT_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Avg' name='[avg:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAS_CT]' derivation='Avg' name='[avg:NAS_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAS_DELAY]' derivation='Avg' name='[avg:NAS_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_CT]' derivation='Avg' name='[avg:SECURITY_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Avg' name='[avg:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_CT]' derivation='Avg' name='[avg:WEATHER_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Avg' name='[avg:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARR_DELAY]' derivation='Count' name='[cnt:ARR_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CARRIER_DELAY]' derivation='Count' name='[cnt:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Count' name='[cnt:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Count' name='[cnt:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CARRIER_DELAY]' derivation='CountD' name='[ctd:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='95' column='[ARR_DELAY]' derivation='Percentile' name='[prc95:ARR_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARR_DELAY]' derivation='Sum' name='[sum:ARR_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CARRIER_DELAY]' derivation='Sum' name='[sum:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAS_DELAY]' derivation='Sum' name='[sum:NAS_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_CT]' derivation='Sum' name='[sum:WEATHER_CT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/QUEVEKX/OneDrive - Abbott/Documents/My Tableau Repository/Datasources/2019-2020 flights.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/11/2021 07:58:12 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='2019-2020 flights' increment-value='%null%' refresh-type='create' rows-inserted='36773' timestamp-start='2021-01-11 19:58:12.189' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>0</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MONTH</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MONTH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MONTH</remote-alias>
              <ordinal>1</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MonthName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[MonthName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MonthName</remote-alias>
              <ordinal>2</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CARRIER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CARRIER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CARRIER</remote-alias>
              <ordinal>3</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CARRIER_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CARRIER_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CARRIER_NAME</remote-alias>
              <ordinal>4</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRPORT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRPORT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRPORT</remote-alias>
              <ordinal>5</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>672</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRPORT_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRPORT_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRPORT_NAME</remote-alias>
              <ordinal>6</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>672</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARR_FLIGHTS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARR_FLIGHTS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARR_FLIGHTS</remote-alias>
              <ordinal>7</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1546</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARR_DEL15</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARR_DEL15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARR_DEL15</remote-alias>
              <ordinal>8</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>643</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CARRIER_CT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CARRIER_CT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CARRIER_CT</remote-alias>
              <ordinal>9</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4083</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WEATHER_CT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[WEATHER_CT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WEATHER_CT</remote-alias>
              <ordinal>10</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1412</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NAS_CT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[NAS_CT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NAS_CT</remote-alias>
              <ordinal>11</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3629</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECURITY_CT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SECURITY_CT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECURITY_CT</remote-alias>
              <ordinal>12</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>541</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATE_AIRCRAFT_CT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATE_AIRCRAFT_CT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATE_AIRCRAFT_CT</remote-alias>
              <ordinal>13</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4148</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARR_CANCELLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARR_CANCELLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARR_CANCELLED</remote-alias>
              <ordinal>14</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>249</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARR_DIVERTED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARR_DIVERTED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARR_DIVERTED</remote-alias>
              <ordinal>15</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARR_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARR_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARR_DELAY</remote-alias>
              <ordinal>16</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5182</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CARRIER_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CARRIER_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CARRIER_DELAY</remote-alias>
              <ordinal>17</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3371</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WEATHER_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WEATHER_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WEATHER_DELAY</remote-alias>
              <ordinal>18</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1306</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NAS_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NAS_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NAS_DELAY</remote-alias>
              <ordinal>19</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2101</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECURITY_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SECURITY_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECURITY_DELAY</remote-alias>
              <ordinal>20</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
              <ordinal>21</ordinal>
              <family>2019-2020 flightsv2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3290</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:MonthName:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:ARR_CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:NAS_CT:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:NAS_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:NAS_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_CT:qk]&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_CT:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:ARR_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:ARR_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[prc95:ARR_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:ARR_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:WEATHER_CT:qk]&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_CT:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_CT:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:CARRIER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[ctd:CARRIER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:CARRIER_DELAY:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='YEAR' />
        <field-sort-custom-order field='MONTH' />
        <field-sort-custom-order field='Calculation_768145279250563084' />
        <field-sort-custom-order field='Calculation_768145279248375818' />
        <field-sort-custom-order field='Calculation_768145279248560139' />
        <field-sort-custom-order field='CARRIER' />
        <field-sort-custom-order field='CARRIER_NAME' />
        <field-sort-custom-order field='AIRPORT' />
        <field-sort-custom-order field='AIRPORT_NAME' />
        <field-sort-custom-order field='ARR_FLIGHTS' />
        <field-sort-custom-order field='ARR_DEL15' />
        <field-sort-custom-order field='CARRIER_CT' />
        <field-sort-custom-order field='WEATHER_CT' />
        <field-sort-custom-order field='NAS_CT' />
        <field-sort-custom-order field='SECURITY_CT' />
        <field-sort-custom-order field='LATE_AIRCRAFT_CT' />
        <field-sort-custom-order field='ARR_CANCELLED' />
        <field-sort-custom-order field='ARR_DIVERTED' />
        <field-sort-custom-order field='ARR_DELAY' />
        <field-sort-custom-order field='CARRIER_DELAY' />
        <field-sort-custom-order field='WEATHER_DELAY' />
        <field-sort-custom-order field='NAS_DELAY' />
        <field-sort-custom-order field='SECURITY_DELAY' />
        <field-sort-custom-order field='LATE_AIRCRAFT_DELAY' />
        <field-sort-custom-order field='Calculation_768145279248195593' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2019-2020 flightsv2.csv' id='2019-2020 flightsv2.csv_665220BBC341428B9903AF36F6902615'>
            <properties context=''>
              <relation connection='textscan.1d2u8gg07i69rn10q0lcc1lv3fo4' name='2019-2020 flightsv2.csv' table='[2019-2020 flightsv2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='YEAR' ordinal='0' />
                  <column datatype='integer' name='MONTH' ordinal='1' />
                  <column datatype='string' name='MonthName' ordinal='2' />
                  <column datatype='string' name='CARRIER' ordinal='3' />
                  <column datatype='string' name='CARRIER_NAME' ordinal='4' />
                  <column datatype='string' name='AIRPORT' ordinal='5' />
                  <column datatype='string' name='AIRPORT_NAME' ordinal='6' />
                  <column datatype='integer' name='ARR_FLIGHTS' ordinal='7' />
                  <column datatype='integer' name='ARR_DEL15' ordinal='8' />
                  <column datatype='real' name='CARRIER_CT' ordinal='9' />
                  <column datatype='real' name='WEATHER_CT' ordinal='10' />
                  <column datatype='real' name='NAS_CT' ordinal='11' />
                  <column datatype='real' name='SECURITY_CT' ordinal='12' />
                  <column datatype='real' name='LATE_AIRCRAFT_CT' ordinal='13' />
                  <column datatype='integer' name='ARR_CANCELLED' ordinal='14' />
                  <column datatype='integer' name='ARR_DIVERTED' ordinal='15' />
                  <column datatype='integer' name='ARR_DELAY' ordinal='16' />
                  <column datatype='integer' name='CARRIER_DELAY' ordinal='17' />
                  <column datatype='integer' name='WEATHER_DELAY' ordinal='18' />
                  <column datatype='integer' name='NAS_DELAY' ordinal='19' />
                  <column datatype='integer' name='SECURITY_DELAY' ordinal='20' />
                  <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='% Total Carrier Delay x Month in 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Total Carrier Delay x Month in 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Late Arrival Delay' datatype='integer' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='integer' name='[CARRIER_DELAY]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[CARRIER_NAME]' role='dimension' type='nominal' />
            <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column-instance column='[CARRIER_NAME]' derivation='None' name='[none:CARRIER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[MONTH]' derivation='None' name='[none:MONTH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
            <column-instance column='[ARR_DELAY]' derivation='Sum' name='[pcto:sum:ARR_DELAY:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' />
                <order field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[CARRIER_DELAY]' derivation='Sum' name='[pcto:sum:CARRIER_DELAY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <slices>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' value='172' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:CARRIER_DELAY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:CARRIER_DELAY:qk]' num-steps='7' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:CARRIER_DELAY:qk]' />
              <text column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:CARRIER_DELAY:qk]' />
              <lod column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:ARR_DELAY:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</cols>
      </table>
      <simple-id uuid='{14D77D7B-956C-461D-8EC2-11B5ABBEAABD}' />
    </worksheet>
    <worksheet name='Avg. Carrier Delay x Month in 2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Carrier Delay' datatype='integer' name='[CARRIER_DELAY]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[CARRIER_NAME]' role='dimension' type='nominal' />
            <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
            <column-instance column='[CARRIER_DELAY]' derivation='Avg' name='[avg:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CARRIER_NAME]' derivation='None' name='[none:CARRIER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[MONTH]' derivation='None' name='[none:MONTH:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]' field-type='quantitative' max='12' min='1' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_DELAY:qk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_DELAY:qk]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</cols>
      </table>
      <simple-id uuid='{AE1E126C-9BF9-4103-AE47-654FCDAAB6C6}' />
    </worksheet>
    <worksheet name='Carrier x Avg Cancellation in 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Carrier x Avg Cancellation in 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Airport Name' datatype='string' name='[AIRPORT_NAME]' role='dimension' type='nominal' />
            <column caption='Arrivals Cancellation' datatype='integer' name='[ARR_CANCELLED]' role='measure' type='quantitative' />
            <column caption='Carrier Cancellation' datatype='real' name='[CARRIER_CT]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[CARRIER_NAME]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Cancellation' datatype='real' name='[LATE_AIRCRAFT_CT]' role='measure' type='quantitative' />
            <column caption='NAS Cancellation' datatype='real' name='[NAS_CT]' role='measure' type='quantitative' />
            <column caption='Security Cancellation' datatype='real' name='[SECURITY_CT]' role='measure' type='quantitative' />
            <column caption='Weather Cancellation' datatype='real' name='[WEATHER_CT]' role='measure' type='quantitative' />
            <column-instance column='[AIRPORT_NAME]' derivation='Attribute' name='[attr:AIRPORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[ARR_CANCELLED]' derivation='Avg' name='[avg:ARR_CANCELLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CARRIER_CT]' derivation='Avg' name='[avg:CARRIER_CT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_CT]' derivation='Avg' name='[avg:LATE_AIRCRAFT_CT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAS_CT]' derivation='Avg' name='[avg:NAS_CT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_CT]' derivation='Avg' name='[avg:SECURITY_CT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_CT]' derivation='Avg' name='[avg:WEATHER_CT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CARRIER_NAME]' derivation='None' name='[none:CARRIER_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:ARR_CANCELLED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_CT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_CT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:NAS_CT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_CT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_CT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_CT:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_CT:qk]</column>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]' value='34' />
            <format attr='display' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' value='99' />
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' />
              <lod column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[attr:AIRPORT_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names] * [federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values])</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</cols>
      </table>
      <simple-id uuid='{28CD29F9-827E-4F12-863F-818DBEFCC92A}' />
    </worksheet>
    <worksheet name='Departure Delays x Month in 2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Avg' name='[avg:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' value='89' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7acad' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_DELAY:qk]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</cols>
      </table>
      <simple-id uuid='{18AEBB04-98FA-4D22-B2DA-E6C4DC7F9E95}' />
    </worksheet>
    <worksheet name='Security by Airport x Month in 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Security by Airport x Month in 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Airport Name' datatype='string' name='[AIRPORT_NAME]' role='dimension' type='nominal' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Avg' name='[avg:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Count' name='[cnt:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT_NAME]' derivation='None' name='[none:AIRPORT_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]'>
            <groupfilter function='level-members' level='[none:AIRPORT_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]</column>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='211' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]' value='504' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:SECURITY_DELAY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:SECURITY_DELAY:qk]' max='339' min='0' num-steps='3' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]' max='339.0' min='0.0' num-steps='3' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:SECURITY_DELAY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{A9B75608-E760-4FDE-ADD4-95700932C536}' />
    </worksheet>
    <worksheet name='US Airports Average Delay x Reason in 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>US Airports Average Delay x Reason in 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Late Arrival Delay' datatype='integer' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='integer' name='[CARRIER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Systems Delay' datatype='integer' name='[NAS_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[ARR_DELAY]' derivation='Avg' name='[avg:ARR_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CARRIER_DELAY]' derivation='Avg' name='[avg:CARRIER_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Avg' name='[avg:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NAS_DELAY]' derivation='Avg' name='[avg:NAS_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Avg' name='[avg:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Avg' name='[avg:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:ARR_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:NAS_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:ARR_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:CARRIER_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:NAS_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]' value='96' />
            <format attr='title' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]' scope='rows' value='Average Total U.S. Flight Delay ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D86D1119-2346-4A5E-B80C-1806F15DA8A8}' />
    </worksheet>
    <worksheet name='Weather Delays x Month in 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Weather Delays x Month in 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019-2020 flights' name='federated.0oidg8i12oxi9g1f6skd01ft345g' />
          </datasources>
          <datasource-dependencies datasource='federated.0oidg8i12oxi9g1f6skd01ft345g'>
            <column caption='Month Name' datatype='string' name='[MonthName]' role='dimension' type='nominal' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Avg' name='[avg:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MonthName]' derivation='None' name='[none:MonthName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]' scope='rows' value='Avg. Weather Delay per Flight Total' />
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]' value='119' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' value='84' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]' palette='green_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:WEATHER_DELAY:qk]</rows>
        <cols>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</cols>
      </table>
      <simple-id uuid='{737A1A62-FB6F-40D9-B628-1CD8739BAB86}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Air Transportation Trends of 2019' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='413' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98438' id='1' param='vert' removable='false' w='99050' x='475' y='781'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3223' id='3' w='99050' x='475' y='781' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='142' h='13867' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99050' x='475' y='4004' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='81348' id='5' paired-zone-id='4' removable='false' w='99050' x='475' y='17871'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Per 2019 trends,  the highest reason for US air travel delays was due to late arrivals. The least likely reason for air travel delays was because of security concerns.' captured-sheet='US Airports Average Delay x Reason in 2019' id='2'>
                    <capturedDeltas>
                      <worksheet name='US Airports Average Delay x Reason in 2019'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]' scope='rows' value='Number of Flight' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.0oidg8i12oxi9g1f6skd01ft345g].[Multiple Values]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Based on data from 2019, the airline carrier with the highest average late arrival delays was Southwest Airlines, with an all time high of 12,993 delays in December 2019. The airline carrier consumers should use to avoid delays based on trends from 2019 is Allegiant Airlines, who provided consistent service throughout the year.' captured-sheet='Avg. Carrier Delay x Month in 2019' id='1' />
                  <story-point caption='The highest percentage of delay across the carries was exhibited by SkyWest Airlines in the months of January and February 2019, while the lowest percentage was identified to be ExpressJet Airlines LLC.' captured-sheet='% Total Carrier Delay x Month in 2019' id='6' />
                  <story-point caption='Based on 2019 air transportation data, the airport with the highest total of security delays was the Pittsburg International Airport in Pittsburg, PA with 339 incidents. The highest average was recorded by the Ted Stevens Anchorage Anchorage and the overall airport with the security concerns was the Los Angeles International Airport. ' captured-sheet='Security by Airport x Month in 2019' id='4'>
                    <capturedDeltas>
                      <worksheet name='Security by Airport x Month in 2019'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]' field-type='quantitative' max='97.597174870315229' min='-36.12796851732363' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='2019 air transportation data shows July as the months with the highest average of weather related delays. February and December come in 2nd and 3rd place.' captured-sheet='Weather Delays x Month in 2019' id='3' />
                  <story-point caption='From all the surveyed airline carriers, Southwest Airlines consistently exhibited the highest average of flight cancellations across the board for all of the observed criteria, with the exceptions on weather cancellations and National Air Systems cancellations, which are in correlation (American Airlines).' captured-sheet='Carrier x Avg Cancellation in 2019' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B19BC5ED-8301-4806-ACB4-7865B00C0A78}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Air Transportation Trends of 2019'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{9980637C-E272-4E14-85A2-82943BE2B2E4}' />
    </window>
    <window class='worksheet' name='US Airports Average Delay x Reason in 2019'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[sum:SECURITY_DELAY:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{880DCE9D-1ACA-4B97-ACA6-A9CFDD5F0020}' />
    </window>
    <window class='worksheet' name='Avg. Carrier Delay x Month in 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB7114E-4C2C-481F-9131-11E530737244}' />
    </window>
    <window class='worksheet' name='% Total Carrier Delay x Month in 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[pcto:sum:CARRIER_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[ctd:ARR_CANCELLED:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:Calculation_768145279251640335:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:YEAR:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[tyr:Calculation_768145279252803603:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9655F39D-A8AB-4F90-995A-C800245F1541}' />
    </window>
    <window class='worksheet' name='Security by Airport x Month in 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='dropdown' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]' type='filter' />
            <card param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[avg:SECURITY_DELAY:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[cnt:SECURITY_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:CARRIER_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EE6A858-645C-49D3-983F-E411B757C494}' />
    </window>
    <window class='worksheet' name='Weather Delays x Month in 2019'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{791F3FB3-F695-4204-8396-E56560BB7E5F}' />
    </window>
    <window class='worksheet' name='Departure Delays x Month in 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MonthName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7CC7E90-38DB-4854-AAA3-4A01F5B47569}' />
    </window>
    <window class='worksheet' name='Carrier x Avg Cancellation in 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='206'>
            <card pane-specification-id='1' param='[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[:Measure Names]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:AIRPORT_NAME:nk]</field>
            <field>[federated.0oidg8i12oxi9g1f6skd01ft345g].[none:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C19253C-E09D-4C65-849A-4968E261934D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% Total Carrier Delay x Month in 2019' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Air Transportation Trends of 2019' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWZcc533f8W8tXdVV1fss3bMPMNg3LiAokZRMyaEtS4llJ1FOjrxkOYlz
      5byFHF3mnNzknFz4OMlxvMWSItmWREumForiAoIAJBL7PsDsa+9r7ZWLgSiCwICA1AAG7Odz
      g56e7qqnMfXrep6qp/4lRVEUIQg9Sn7UDRCER0kEQOhpIgBCT1O+8pWvfOXnP0RRyJ//j/9K
      YuIp+hIxThw/ycjoyC1vOPHGD/j617/O0ZOnCRSTiZHBB9Kw65dOE0sV0JRbn5++dBo9VUDD
      5fi7ZxgdHrrrclZnL/HXf/M1vvf9HzJfbHJo7857boNdWeTbP/4p+3Ztu+vrLp38CX/+jVfY
      ffAgOi5f++u/4K23j+EqKdJyiz/787/m/PQCB/bvYeHaOf7ya9/l8LNP0Sou8Bd/9X858d4F
      9h88SEwR30cP2y0BqC+epyQPMn9jhv17tlMqlRlIxXjv4nVO/PQUe3ZNMTIxhelXGX36czx/
      aJIzp89y6cwJYlaW737rm1y8vsLu3ds5efQNjh19k3qg02/A17/+NRYrNnkr5JVXX+fke+fZ
      sXMX5aVrfONvv008PYgZ1rl0Y5ETJ3/KD771Vc5eW2JobIKjP/w277x3iYmJEf7nf/9vnJ9e
      YnTbDjzHZqAvyfe+9U0u3Fhlx9Q2fnrsdY4dPUrZVhgfHiSR6efg7kmWKjZ/+KUvcvXiaVaW
      l5hfb1OaOccrP3mHbTt2ce3Mzzj5s+Ncml1n1/YxTrz+A370+lGUxABZtcM3/u7byGaWQn+W
      KPR57ZXvcPzMNSZH+/mTP/1TrEyBJ556grgiMbX3EJ985iA//MFPWLx+kS98+T8gr12gpOYJ
      nRbr8/McfOZpfvgP3+alf/4H7Mg4vH25zO7Ju4dZ6L5bvnLeePMEpmkwN3sVgLNnzhJ2ynz1
      Wz/gM5998Q5vj3j1u99iYOpp8lmLfQefoL14lrMzJd577xyf/90vcfFnx7l06m1qYYLhfB+N
      9Xmi9AQvHdnGd7//Jt/+3mt8+Q9+nzf+8WVq5UW+86N3+Ccv/QbPv/BJfu/f/RHjgxmmdu9j
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg. Carrier Delay x Month in 2019' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Rd53nm+9vl9ArgoAMkQJAAq1hVLKtLtmTLsmPLmUlbSWYS2+Nx4sxk
      kpuZezOZsjKZe++6npSJS6rjrDi9WbYl26pWL5RYxAKCKEQvp/e29/fdPzYAEiQIohMgzrMW
      FoBz9jnvLu/zlfd73+dTpJSSCirYolDX8sullKw3vyr2Nr+99bS5pgSA9b+BpmlW7FXsLRpr
      ToAKKtjIqBCggi2NCgEq2NKoEKCCLY0KASrY0qgQoIItjQoBKtjSqBCggi2NCgEq2NKoEKCC
      LY0KASrY0tBX8uF0fJKJZJlSOkZ9Yz2jo5MEq6pIJjPs3b8HbbXOsoIK1gjKctOhpRQcf/M1
      pN1PwK2hCkmgZQeDfRfpbKqB6hY8qomUEkVRVvu8rwshBKq6fh1bxd7mtrdsAgAgBYlkklg4
      TKC2jujEBA2NDYxHEnR2tMF0aut6XpBhGOj6ijq2ir2bbE/TtHVrNFdGgBtAVghQsbcMe+tJ
      gMokuIItjQoBKtjSqBCggi2NCgEq2NKoEKCCLY0KASrY0qgQoIItjQoBKtjSqBCggi2NCgEq
      2NKoEKCCLY0KASrY0qgQoIItjQoBKtjSqBCggi2NCgEq2NKoEKCCLY0VEUBKiWkKDKOMlJJy
      efq3YazW+VVQwZpiRbVukfFBJpIllHIOh8NBtmiiaxrSNNi1bz92RVa2SarY29A2l00AKQUT
      UxGyJaivraGYSRAI1hGLRqkNuDEFSFUihFjN870hhBDrrkJRsbd57a1QFUJSLJXJpBL4q0PE
      oxFqaqqIxtPUhaorRfEVe8uyV1GFWAG2goPc6vYqqhAVVLBOqBCggi2NCgEq2NKoEKCCLY0K
      ASrY0qgQoIItjQoBKtjSqBCggi2NCgEq2NKoEKCCLY0KASrY0qgQoIItjQoBKtjSqBCggi2N
      CgEq2NKoEKCCLY0KASrY0lgBASSTY8NEEymGBvpIpDIMDQ5RLOYZGhln/cuoK6hg6VhRrZum
      KkQjYdLJOG6Hjub0cPpsD9tq/WTKEpdiIuX6FsYLITDWUZalYm/17a0nlk8ACfl8gZJhEvS5
      iaVyZPIJAl43E9EMe5oVNEWr1ARX7C3Z3nrWBC//yhSF1vadtC5wyE2Qk6mggiWhMgmuYEuj
      QoAKtjQqBKhgS+OWIoCUEkRl4lHB4nHLEEBKiRiJIE8OINP5m306FWwS3DoEiGWQ6TzK3lbM
      /nFELH2zT6mCTYBbggAyV0QMh9F2NYHThrZ3G2I0iphK3hRp7wo2DzY9AaRhYl4cQ9vVhGKz
      ljUUm462txURSSLGYhUSVHBdbGoCSCkxe8dRm6pRPM457ymahra7FZkpIIbCFRJsEoiBlyif
      /CbSLK+LvU1LgJlJr+LQUUL+eY9RVAWtswlMgegdR65znkkFS4Mx8g6lU3+DNA3y3/oC5vjp
      Nbe5afcHELE0YiyGtncbino5b2S+3BUpJWI0ikzl0bqaUbTVO5+tkJuzHvbM2ADF5/4Lto98
      Cd0bQqbHKf7w/0UJNOO447MozsCa2N2UPYDMlxBDYbTO5jnOfz0oioLWEkKt8WKeG0KWzXU4
      ywoWC5GNUnz+v+P80H9HcVUBoPqbcH7sf6E1HiT/1Bcx+l9CytXvwTddDyBNE/PMEOqOBlSf
      65r3b9RiiWgKMRJF292C4rCt+Hxu1RZ5vezJcoH8d38Z++2fQW8+PG82qMgnKL35FWQ+juOe
      X0b1N66a/U1FACklZs8oatCDWl817zGLeWAimUX0T1gkcDlWdE63mkOupz0pDArP/gb69nuw
      7f7orL350qGllJhjJym98WX0nQ9hO/CjKNrKG7BNMwSaGccruoZSF1zRd6kBD1pnM2b3SGXV
      +CZBSknpja+gVrWjd33khscrioLefBjXj3zZ6jWe+kXMqe4Vn8em6QFEPIMYjaLtbUVZ4PuW
      0mLJQgmzewR1ex1qlXdZ53Urtcjraa905h8Qk2dxPPTrKMrl57nYghgRH6T4ypdQq9ux3/FZ
      FLtnWeexKXoAWSghBqesxa5VnE8oTjvavm2I4QhiKlFZK1gnGENvYPS9iOP+/zjH+ZcCtWo7
      zid+B7VmJ/lv/QLGwMvLen4bvgeQpsA8N2S10n73DY9fToslDRPzwihKlQe1sXpJ5Xi3Sou8
      XvbMyEWKL/wmro//3ryhzeWURIpcjNLr/xtpFHHc80uo3vpFf3YFBJCMDl1CaE6KmTjB2gam
      xsepq6tjKpZkd+dOFFZGACkloncMxetCbaxe1GeW+8CkEJgXx1CcdtRttYt+AJvdIdfTnshM
      UXj6V3E++j9QAy3XtbecmmApJebIO5Te+hr2O/8NWsvti/qOFfUA8fA4E7EkVYEaEhOD1LTv
      4VLfRTqbaqC6BY9qqUIsu8B5MoHMFVHaF89oIcTKepxLUyAlSlsdLOK8V2pvqdi09so5Ss/8
      Kvqdn0et37929ow8pRd/C0V3oN/1hdl1heth+QSQkuHBfgzVQTmbIBCqIzw5RagmRDSRYvfu
      TtQV9AAimUUMR2446b0aK22xZusKMgVr1fgGtjdzi7xe9qRZovCD/4y+8xFsuz50Q3srVYWQ
      UmJeeoXS8a9j2/8ketdHr/scN+QcQBbLmOeH0fa0LnmxarUcREwmEFMJ6xx0bc3tLRabzZ6U
      kuIr/x+qpw7bkZ++oWOvpiyKLGUpvvUHyMQQ9g/+Elp1+zXHbDgCzE56t9WhBm486b0aqzpm
      jaSs0OsCq8abzSHX217p5F8hEpdw3P9ri4r4rIUukBm+QPGVL6G13oX98E+g6JczhzdUGFRK
      iRiYQA35l+X8qw015Edtq8M8P4zMF2/26Ww6GAMvY468g+OeX152uHM1oNV24frEl1EcHvL/
      9HnM8VOzIdMN0wNIKZETcWS2gNrRuOgWQEoJpTTmxFnM4bcR+QS2nQ+htRxDsV2bK7QcyGwB
      s2fUWofwzv3OzdYir5c9c+o8xVe+hOtjv43i8C3J3loqw4nUOMVXfxvF4cfxwS9uHAKIZA4x
      NGWlN98gXVmW84jIRYyhNxCT55BmCa1uD9q2uxA2H7L3+5hjJ1Hr92LrfAy1bi+KtsKJXKGM
      eX4Itb0BNXh51XGzOOR62hPpcQrP/Cecj/3PJSeurYc0opQCo+9Fyif+YmMQ4EaTXmmWEPFB
      zKE3MSdOI4tp1Ko29NY7URsPorovrxHMPDApDMTEGcoXnkZEetGaj2Db8zGU4LZld8eybGCe
      H0FtrEIJ+VEUZVM45Hrak4UU+e/8exz3/Qpa3Z5l2VsvbVBZTN98AkhTYJ4fRm0NoQasllUK
      A5kaxxx7D2PkODI1hhpoQWu53RraeOuve4PmLYgp5zCHj1PufRaZDaNv+wD6rg+h+BY/1Jr9
      rqtWjU3T3NAOuZ72pFmi8Mx/xLbnCfSOB5dtbz3FcW8qAaSUiL4JcNtQAmCOncAcegsRH0Dx
      1KK1HENvPooSbEVRF/cQbvTAZCGB0f9DjN7nQdHQOx5Ab78fxbX4DNPZVWOXA9lUtWEdcj3t
      SSkovvT/oFZtx3bwx5ftwEaphKbpq1q1txBuCgGklFBMYwwcxzj9PNIWQbF70BoPobUcRa3Z
      haLbl2VzKQ4iMlMYF3+A0fciirceW9dj05PnG0egrIjVJNIw0XY2rmqS3kLYiASQUlJ+78+R
      uQj2e/79koaY0jSR2SIykUWmckjDQJGgeJwoDVUoXteiqv6Wi3UhgKIoUM5NT1ytcTz5Mmqg
      E/22B9HqdqPYl5eOfDWWlQwnJSJ+CePiDzAH30CtbkPf83G0hgMLFl1IKTHGoijhFNrOJhSv
      87rHrhY2IgHKvc9j9D5nlTTeoEjlaodHCBSXAyXoQfG7MTUFTVWR6TwynERmiyg+F2ptALzO
      VR8arTkBSmf+ETH4mjVxDe1C3/YB1OrdiP6UNel1Lq+lvx5WvHJplhFT5yj3fB8RuYjWsB99
      14dRQ50o6rUrwoZhoJUsbSIl5LckWtZw/LrRCGCOn6L45ldxPf6leXPy53V4t3Pa4V1g0+fc
      r6vnAFIIZDKHmEpCvogS9KCGAuBxrMp9npcA+VwOu9OFtsKuR0pJefht9Ko2FG8tiqJeXult
      DaEGV6fVvxKr6SDSKGIOv0W553vIXAx9213oHQ+jBFpmb/5s1MkUlv5QrmgNiVah3ng+bCQC
      iMQQhWf/C86P/N+zKcjSMJHZguXwmTyYCzv8fPauNwmWholMZBHhJJQMlGqvRQanbdlkmJcA
      E4MXeeH1E9z1wXvZsW35BchXzwGklIj+CXDa0Zprlv29C2GtHEQWMxiDr2FceBpplLB1PorW
      fh/C7p+1J6VEpvKI/nGL4KHVl/LYKAQQ+TiF7/6qtcrr2m45fDpvtfCeaYf3ucG2tIjOYqNA
      0jCR8QwikoKyOU0G/5JHFPMS4L03nqN/zOTRj96Pz7X8ce3VBBATcWQqh7qrac2GCevhICIb
      xuh/yZo8u6pw3PcrqFek3cqyidk3jqKpqO31CybTLRU3kwBSSjAFMp2h8NKvo7nvQWu8Y0UO
      P5+9pYZBZdlARlIWGQC1oQql2reoSNK8BBgcuMjp97p59MknWMkI/UoCiFQOcWnSWuldRYe4
      GuvpIFJKSv2vYL73pzge+s9oNR1z3pNTScR4zJJwWUQ122Kw7gQollBzpSuGNCal819F33Mn
      tr2fXLHDX2NvBesAVlqMgRiPIZM5FJcdpTaA4ndflwzXECAbn+Ld97tRFAd33XsnKxnJzkaB
      DGvcr3W1oLhWd9J7NW5GC6lmxyn84DewH/npaxaAZKGMeXEUxe9Gba1dcUhvva5PlgzEWAyR
      yKD63ChBN4rPRenkn4FZwn7X59ckwW21FsKklJAtIMIpZDKL4nGg1AZR/K45IetrrsBTVUeN
      TyE2kWZV9NPEtJbP9ro1d/6bBTXQiusTv0/5wjMU3/kTpLh85xSnDW3fdlAVzLODyHzpJp7p
      jSFLZcyBCcxzQyhOG8reVrSOBtQaP0bf95GJYex3fu6mZncuBoqioHhdaO31aLe1odQFkeEk
      5qkBzP4JK8wq5LUEkFKQy+ZJiSIrk4yyYA5OoQQ8y5Yd2SxQ7B6cj/1PKOcpPPtfkKXs5fdU
      BbUlhLq9DvPCCGJyYylQSCmR+RJm/4SV5uF1od3WhtpQBdM9ljFynHL3d3A8+J8WvSq/UaCo
      qqUFtasJ7WA7SrUXMRHDPHPpWgJM9pyBmh20BBwUVsO6rqG2rE3EZ6NBUTXsH/gC+o77yX/7
      lxCpscvvKQqq3412oA2ZymFeGEGW128H9vkgpZxN9Tb7xlGCHrT921FrA3OGCWZsgNLrv4/z
      w7+5ainmNwuKqqIGvWi7mtH2bb92o2xPqB6zbxCnP8DCU1XJ2PAghmqnkEoQamhgYnScUF0t
      4ViSPV27UACtNbRuiU0bAYqiYNv1IdTgdgrP/Br2D/4Sesuxy+9rKurORmQsbWmcti1flGu5
      mBkfmyNRMEzUlhqUgGf+2HsuSunF/4Hjkd9A9YTW9TzXGoqmzh8FGh0eoq6xGV3XuL7rSlKJ
      OIWyIDw5isdux1O/bXVVIZaBjaSaIPMxys//V9T2B9D3fRKuvpslA9k/aS3kbKudHW4s195i
      IJM5lMmE9XdjFco8AsPWmwJz8HWME9/Adse/QW0+umybS8F6P795CXDunZc43pvmx358oTCo
      pOf8WdzBEKVMEpcvQCwSJVQbIhJPTfcAa7c/wPWwURaKZiCNIsVX/hcAjvv+A4o2945KKa2w
      XThlrSB7Fl53WW6uk0xkESMRsOtoLSFwz59KIKVERHspvflVFHcN2u2fxearXZK9lWC906Hn
      vZOGCoVoioWnaQqde2b0XRoAaGywftfXTy+Lb5x53k2DojtwPPBrlM/8I/lv/zucH/7NOQU8
      iqKgNdUgAx7MvnHUUAClsWp1VBGEtFZLx6KWDGRHI4r7+qENkY9TfvfPMKN9OD7wBbS6PRjG
      zZ2nrDWuIYAURVTFz869to1VMb+JoSgqtv1Pola3U/jOL+N48P9Eq+2ce4zHibZvO2JwCnFu
      yKo/ti9vFUaaAhlJIiYTKD6XtZHIArlJ0ihSPv8djJ7vYdv/JPa7vzhv4t+tiHmHQEN9F6lp
      bsPttC0wB7gx1mKDjBthow2BroZIjVJ44bew7fkY+s6H5x0Syen6aLWpBqXaOycicz17M6ug
      MpFBTCWtFOKmGhT7AsOzch5z9D3KZ/8JtbYL+6GfRLHPXbG+GffzpleEnT/1LvZAA21tzTeI
      BC2MCgHmh5SC8vt/h3npVRyP/Lc5Q6LLx0jEeBwZSVpDl+m5wdX2rAS8HGI0BgqozTUoPteC
      DiSFidHzfcrv/x22fZ9E7/rIdfP4b3UCzHtlHo+D4ydO07pCAlQwPxRFxXbgX6AG2yh895dx
      PPh/oYV2XXWMgtZUjQy4MXvHZ2sNZjBnYmvT0bbXXndie+VnxNQ5im98GS3UheuJ31mzzec2
      BbJT8xMglc2SDsduMAmuYCVQFAV9252ogWYKz/03bLf9KLZdH772OI8T7cB2xKUpzHND0FaP
      SOWt3XIcNrSOBhT3jTN2RTZM6Y2vIEsZHPf96rwygVsGUkK0B4Zfv3YIFL3Ug6jvIN7Xzfb9
      +1aUDlEZAi0Ospim8OJvoVa1Yb/95+ZNNZiZG5iXJlH9bqvybBG577JcoHzqrzAGX8N++8+j
      td6xpDyeW24IJAWMvAnJYej6+LUEKGfjvH78DKrNyT13316ZBK+TPSkMSu/8KSLWj/PhX79u
      jfSiVRqEiXnpVUrHv47e9Si2fZ9C0ZfenN1SBDCK0Ps9sHuh7X5Q9evXBOeSKWwB/6qkQ1cI
      sDhIKTH6nqd86m9wPvwbqMHWJduTUiJi/ZRe/30Uby32Oz+H6l5+LtYtQ4BCEi48BQ0Hoe7A
      7N4P817Z6KVeLvQOsuu2w7TWLW5nlgpWDkVRsO18BDWwjcKzv4H9rs+jt96x6M+LXIzSu3+G
      jA1gv/sX0Gq71vBsNwmkhNQI9D8HHR8C/9ydaeZtmuOxOIV8ianJiXU5xwrmQqvtxPn4lyif
      /EtKJ//qhjukS6NA6f2/o/Dd/4DedAjnE79bcX6wnH/yJAy+AnufvMb54TrrAONDfYxG8xw+
      tA9thTt1xL/5lyhSotfXo9fVoTfUo/n9KK6FY9XLxWYeAl0NaZQovv57YBRw3PcrKLpzbo2u
      MK19sY5/Ha3lduyHfwrFtrraRJt2CCQMuPRDKOdg56OgzR8wmJcAY4N99PSPc/eD96y4JthI
      JhGxGMb4OMZUGGNyEpFOI4pFVKcLrboavbEeW109en09asCP6vEsW2ntViIATEvLnP1HjL4X
      cT7yXxGOILquI+KXKL79RyiKhv2uzy9ZhXmx2JQEKOes8X6wDZrvgAWiXtdcWWpqhDM9A8Si
      mVXJBdL8fmzBII4dO+a8Lk0TkclixuMY4SnKY2Pk3nsPkUojsllUjxstEECrrcXWUI/e0IAW
      DKJ6vSja1lmeUxQF+/4nUavaKTzzf6Ad+wzm+AnMqXM4jv1r1KbDW6re4oYo5+HM38C2e6Bm
      1w0PvzYMWszR3d3NyGicRz768E2JAkkhELkcIpXCmJigPDGJMRXGjMUQ2SyK3Y7m86I3NKA3
      1KPX1qGHalC9XkxFuaV6gCsh0uMUXv09bG13W+kL61CauKl6gGwYLj4NnY+De3HFOzddHn1Z
      35kvYKaSmOEI5YkJjIkJixyZLNjt2Ldvw7l3L/b2NlTPtXJ9q4lbbci1EewtmQBSQrwfBn8I
      nR8DT92NPyIExXPnNh8BbmSvnEohhkconD1LqX8ARdOw79qJc99ebNu2ozpXo9T/MraCQ25o
      AkgBo29DfAB2fwJuoOwtpaR4oYf0U99Gq666tQgA1yqZiVSaUn8fhffPUB4dRXE4cXR14ty7
      B1tzM4p9ZVItW8EhNywBzBL0fh90B7Q/BAsMCaWUGKNjpJ56ClQN/xOPW89/JQTIZzNIzY5Z
      yuPy+sim0/h8HtKZAgG/96YT4GpIKTHjcUoXeymcPUd5bAzN78PR1YVz3170hgaUJT7sreCQ
      G5IAxTRc+BbU7oWGw7Mru1dDSokxOUnqqW8j0hkCn/wRbO1ts9+/AgJIYuEpwrEEKiCMIti9
      5PM5vA6dpo4unKpc9yJn0zTRFhklkqaJGY1R7LlA4dx5zHAEvaYa5769OLq60EIhuMG5L8Xe
      aqBiD5TMGFz8HnLHIxDYdt3jRCpF+ulnKA0P4/vIYzj27r0mvL4iAvScO0uwtp54JIIiTUzN
      SalUxKWrtHbuxqFcsUHGOmFFD0wIzGiU4tlzFLq7McIR9Pp6HHv34Ny9Gy10bU7NRnSQW9re
      1PsoEyeh6xNIh3/eQ0Q6TfrZ5yhd6MH/0Y/gOLD/ug3ZigiQSaVAs6EicLg85HNZ3G4XuXwR
      r8e94YZAS4UslymPj1M8d55i9wVENove1Ihz/34cu3aiBgKVTfLWwN68QyBhwuDLUIhbkZ55
      VnalEOTffZf0d5/B88D9eD54N4pt4UD+mk+CU2cHkEVjVhFa0VVQFEu7cVqx13rP+n9GPHb2
      eE2dZe/se6pqSexMfw8we4zUVWyOtdEgFcUSxtgYhTNnKPb2InM57Lt3E/j4Eze80auFLUkA
      owAXvg3+Zmi565qVXSkExe5u0s98H1tzE4FPfXLRwY01J0DyVB+iUEIalmCsNE1LLkUIpCmm
      XxMgpaVmIKX19+zx1ntI60JnvpeZ48T06U//NgtFWn7iEWz+tY3/A4h8nvQrr1I6eZLqf/t5
      NO/aK7xtOQLkotDzbWj5AITmJvhJKSldvEjqW0+hBoIEPvFx9PobrwFciVsuDJrsHiT20kla
      f/pR9EWUCq4UhmFgdF8g+ff/QPVnfx5bU9Oa29sSBIArFreeAM9lcS4pJcb4OKmnvg2mwP+J
      J7C1XJvpuRjccgQwDIPCwATRl0/R8pMfQlvlTfjms6frOuXxcWJf+0MC/+JHce7bu+b21gs3
      jQCjb1sEuGJxS0qJORUm9e1vY8bi+J/8JPYdO1YUZLklCaDrOukLQ8ReO0PLTzyypiS40kHM
      VJro176G+4478D5w/5rbWw+stz2zlEe99Lyll9T+MEwLdJnpNOnvPk1pcBDfRx7DuX//quzN
      fMsSACB5uo/EO920/NSH0NZoYnyNTk+pROwbf47m9xP49JOrnrl6SxPAKCDP/QPU7kVpOASK
      gpnJkHn2OQrnzuH/yGM4Dx5c1Xt6SxMAIPFeD8lTfbT+5COoy5QaXIo9sCbrqW9/h/LQENWf
      /QyqY/Xyj25ZApQycPZvMZrvRqvtQpbLZJ9/gdybb+G5/z48996zJpG2W54AAInjF0j3DNP8
      ow+g2lb3YS4kVZh76y2yL7xEzec/h1ZVNc+nV8/eWmFd7OWiVlpDx4cxnHUU33mH7Esv47r9
      GJ4H7kddYb7WQtgSBACIH79Atm+UpifvR12nbUullJR6+0h885tU/ezPYG9rW1N7a4E1t5eZ
      sHL4d34E6aol+kd/jF5Tg//xx1E9q7Oz5kLYMgSQUhJ/4xy5oQmaPv3AqpFgMQ5iRCJEv/o1
      /I8/juvI4TW3t5pYU3uJQeh/FvY8ibT5if3Jn6Dv2IH/kYdvrjjuamEjEWDmfKIvn6I4Gafp
      U/etyn7Fi3UQkcsR+6M/xtHZiffRD1dqniMXLIW2vZ9Gak5if/J1bE2NOB9+BEyJ7rStak99
      PWwpAsycU+SFE5TTWRo/fs+67tsrDYPEX/8NsmxQ9VM/saxJ3S1BgPETEL0Au38EqTlIfPOv
      UN0u1DsfIHxuDLvXiVEoA6A7bTj8Tuw+Jw6/C91lR3es3vncWgQwy5jFDJoreN388Jnzirzw
      HmahTP1H71xRd7tUB5FSknn+BQqnTlHzuc+hepeWsrGpCSAlDL9u1e52Po5UdZJ/9/eYZZNC
      x+2gKIT2N2Gf3sVGmgKzaFBMFSim8hRTeYx8GWGaaHYdm9uBI+DC4Xdi8zjQnbYlP8vNTwBh
      WGPJ8DnIhRE2D6qRB2eVJYsR2AbOawkhpWTqB8dBCOoeu2PZJFjunl2F998n9a2nqP7MZ7A1
      1K+pvZVg1exJAQMvWoltOx9DKiqpf/wnkr1jGIcfILS3CV9z1Ww69ML7GwjMkkkpPUOMAuVs
      EbNkoNo07F4HDr8Lh9+FzbswMTYnAYQJmXHL6VMj4G2Eun3ga8IQoKtAPgaJS5YKcDFlkSDY
      BoFWcFWDoiKlZOKp11EdNuoevX1ZJFiJg5SGR4j/6Z8S/LF/iaNrcUpum5IAwoSL3wW7zxKl
      VVRSTz9N+JXTOJ94kvojbehO26y95apCSCkRJZNi2iJFKZWnlC1hFsuomorutlvECLiw+5wW
      MTYNAaSAzCSEz0J6zJK9qN1npcheUQs67wMTxjQhhiA1ZAmlOgMQbEP6Whn/3llsVT5CDx1Z
      8o1fqYOYiSTRP/gDPHffjefee9bc3lKxYntmyRKpCmyHpmNIIPvCC8ReP0nwZ34GX2vNnHu+
      FuK4UkhE2aScL80Op0ppazi1sQkgBWSnrJY+ccly+rr94G+FlWzpI0yrsGK6h5C5GKmLUVy3
      3YF9+z5w1yyoJrZkezeAKBaJ/9k3rPj3pz65YIRoUxGgnIPub1nPrG4/Ztkk+tT3UEb6qfrs
      Z+fN1l3PLZKklBuQAFJazjn5vpUN6AxAaA9U7bCq/2+AZT0wYUIhQea9NxFTvfh2BFDsPghu
      t1ouV/VsUtaq2JsHUghS//wtjKkpqv7Vz143fWLTEKCYgvP/DK0fQFbvJDOeJPzUs3jTQ4S+
      +AsLXt9N3yRvsYiFx3H6a5kc7idY20hsapKGxnomIgl2tLVaBSuLIYCUUEhApBvifaC7ILQb
      qjtAX1pO/0ocRBgmo3/7Ip62OqoOt6AkBq05Rj5mpeTOEMIdmiXEau8PkHv9dVF4ULoAACAA
      SURBVLKvvkbN5z6LFgxec8ymIEA+Buf/EXY+hulsYPLkMLl338OXvkTtL13f+WfsbRoC5FMT
      ZEw/I5e6aagJoHhCDA9eYkdDEFtoG27VXLgovphEi/dCtAepORDVXcty+iuxUhUKaZiM/fUL
      ePdsJ3B0ei9fKaGUgsQgSnIItRhHsbmRwe0Y7kYUT+111YeXg+KFHtJ/9/cEf/an0a8q9Fhv
      lY2l2lMyE6h9z2Du+hi5lINo9wSu/ATK6beo/uIvoLhcq2pvpVhRUfxw3zkyMoBdpFF0O6l0
      Fr/PRyaTY8+BfejM0wOUMlZLH+kGFKulD3VZ29asAlZlTF4yGPnL5wgc2UXgto5rD5DC6uIT
      g4jkMGo+AooGDj/4mqwfV9UNVcoWQnlyitgf/iH+J57Adejg7OsbugeI98PQq5jtH2XyQhop
      JEFHlsx3niL0xV9E88+v4nC1vU3TA9wIs3MAswCxXsvphQHVu6ad3rfggtVysFoOMkOC4O27
      8e9rW9iepoEoW9GlzDikxyEXBtMAhw+8DRYp3CHr/0XCzGSI/dEf49y3D+8jD6Oo6sYlQKQb
      OfIWmaqHifSmqOlswFGKk/zrv6XmF7+wKOefsXdrEeDiM6iFOFTvtJzeEVh1p78Sq+kgZrHM
      yDefpfquvfj2ti3NnpQW2YspiwypUchFwMhbQ7wZUnjqrJ7jOlEnWS6T+Mu/Ak0j+GP/EhM2
      FgGkhPH3MMfPMVm+HanYqT/YipgYJf71bxD6d7+EVnXtXGYhe7cWAUoZVLt3TZ3+Sqx2C2nm
      iwx943uEHjyCr2vpm9ZdA2FCOWv1Etkp66eUtkjhrgFvE3jrrYU7dWYnGEHmB89SON9N4Of+
      FfZFtqargQWvT0rk0Ktk+/sJG4ep2d2Cr6UKY3yC2B/8ATVf+LfodUtTabj1CLDBkuGW9Z3Z
      PMPf+D51j92BZ8dc1YdVsSeFtbFDdtJa7MuMW3MlRbNI4WtCumspdA+RfOYHBB5/HOeh1S0N
      vB6u38MJZN+zRC9MUKy+m/pDbeguG8bkFNE//COqP/Nz2BoalmVvvQggykaFAIv+3mye4b94
      lvqP3Il72+XcnTUbk0sJZtGqlsqMW6vf+TjlWJzC+Uso/iYcdz2C3r4XZQVRsxth3uszy8iL
      3yM+UkDveghfSzWKomBMhYl+5atU//y/XrZMyVoTQApBYTRC/PgFCuPRCgGW9N0ZiwQNj9+F
      q7Vuze1dAykxygX0chrS48jUKMZgN6pdR6trnTvZtq+OMNg1Rf/lInT/M3lRi73zHnSXFf41
      43Eiv/e/Cf7UT+Ho2HG9r1uUvVVPhZCS4kSM1Ol+coMT2ENBAoc6cG2rrxBgqSgnswx943s0
      feo+XC21Nz0qI/J58m++Qf7NH6K7DbwfPIjuEFbvYfeCr9FKFnTXLCvqNmNPSklhKoI+8BR6
      251Qv2/WSc10muiXv0LgySdx7Nq54utbDQJIKTGSWVJnBkh3D6G5HARu24G3q3WOOEKFAMtA
      KZZm+Js/oPnTD6DXBjZEVEYaBvl33yXz/IvYmpvwPvIgthqfNdlOj1mRqHLOWpvwNlrE8NTd
      MCpnGAaKgNiZi3hTP8R12yNQ1TH7GTOTIfI7v0vgySdx7tm9Kte3EgKIskHqzADJE70gJf6D
      Hfj2br+uSmCFAMtEKZpk5K9foOHT9+Our15zezO4YcWbaVLq7SX13adRdB3/Ex/D1ja9IcRM
      BCobhvTodAQqMx2BCl0VgdIwCmXS4wlS3T00eN7HcfBxK518GqJQIPLbv4vvsUdxHT60ate3
      VAJIIcmPhEkcv0BxMob/wA78+9vRA54bfs8tQwApJbF8jkwhT2uwel1szpAg9MBhfHu3r0vk
      YrEEl0JQHhwk/exziHQG70MPWKJSV9+XmQhUZgKRGqM4MoBiZNGcTlIJHaEHqPKMo9/2qTn6
      nKJYJPrlr+K57x5cR4+u2rUvlgBSSoqTcVKn+8kOjOOoDRA4uBPX9vol1RJvegJki0V6wpN0
      hyfw2Ox47A7G00l2herZ39iEx74yUSopJFIIK6fcFCAsRWohBNKUlLN5Ei+fRHfaqf/YXWum
      QDeD5ZRgmuEw6We+R3lkFO/DD+E8chjVbrc2FcyWyE6lyE2lKGWLuKo8eOp9eEJO1EIEkZ5E
      rd09ZwVblErEvvI1XHfegfuulZWUznd91yPA7Lj+7ADpc4Nobqc1rt+9bdl6T5uSACXDoDca
      pntyHCElu0J1tPuqsUuVcr5I2TDpHh+jJxWlvinEHkcV3qKCMC1JdmFYzivF9N8zUuuSq35b
      iXyKennvAkWd+a2gaipCCMrZEvm+EdR4lJoHj+Da1oDD70Szr0E4dgVDPDOVIvWD58kdfxf7
      kdvJBtrQvB489X489X7sHsc1IgHXRoHKRL/2hzj37sHz0IOr3uvNRwAzXyTdPUTyvR6khODh
      XXj3bFsV9e8NTwApJWbJoFw0GC9lOD81TngiRlVGoc0RIGB3gpRodt1yOB1sDgeqroCmknCY
      nEuGiU7GOVTfzI7aOux23XJoTUWd2ZRDAQXFmtwp1g7ts78XwIyDCENQTmSY+M7rZKI5PId2
      g6pic9txVXtwVnlWhRRL7gGEpJjKk5lIko9kMMsG7oAdx8RFCidP4ujYge/RD8+ben21PWma
      xL/x59haW63cpDUY8s0QQJqCTPcgyVN9mPkivt3b8e1vx7aIcf1ScFMJIKVVqmYUyhiFMuVc
      afqniJEvYxomU9kMI2qOrE+lpT7EDmeQGpsL+4wKgKaSy2U5f+YM7588gWma7D94kKN33oV9
      WlJPSkmykOfM+CiX4lF2heo40NiCexUk965pIYUg8W4Pifd6qP/oB9CCXgrRLIVEjkIyjxTy
      MimqPTh8SyPFYmRfzKJBLpwmM56glC1iczvwNvhx1/nnFIjLcpnc8eNkn38R2/ZteD/0yDWr
      t7NhUCGsqrWGBnwfeWzN5ju50TCJt7spTsVxtzUQOLQTR23ViuVrroc1J0ApU8DIlzFyJUq5
      EkbecnI5PfRQdRXdaUd32rB57OguO1nVpC8dZTAZJ+h2s6ehkdZgNfoVRDJNk94LF3j/1Aky
      qTT7bruNvQduQ9N13j95glPvvsvBI0c4dPQYtiscvWya9IQnOTc5jttm50jLNhp8/lVXhShF
      koz90yt4djQSeuAQiqZZDYIpKeeK5GMWKYrzkcLvRLvOmHY+e8IUFOJZMuNJ8tEMiqrgrvXh
      bQxi9zlRtYV7YGmaFHsukv7u0ygOh7WH7nZrUj/TIif+4psoTqeleL0Gzl+YiBF58QRCCEL3
      3oaruXZ2C621xJoTYPL0MIqiYHPZLe0Wlw2by46qW0OQmZuZK5XojUzRPTWBrqrsbWiivTqE
      48rWVUqi4TDvvv0Ww0ODtG7bzuFjtxOqq5vtZWYcpFQq8fbrr3Hu/fc5fOwYh44dw2a7TAQh
      JROpJCfHhkkXixxoaKKztt5KbV4CFlSiMwXRV0+T6R6m8cn7cIQC896jOaSI5yimriBFzRXD
      J5s+65DlbJHsZIrMRBKzaOAMuvE0+HGHfKi2ZaoqCEFpYIDMs88h8nm8Dz+MbXcX2e98F1ku
      E/jRT6+KJv+VKE7Fibx4ElEqE3roMLb6qq2TDFcyDQZjMc5MjFI0DHbXNbAzVIfHbp9zA3LZ
      LOfPnuH0iRN4PB4OHT1K+85d2OZRVrvaIQv5PG++9ioXzp3j2F13cfDI0WscNlMscnJsmKF4
      jG1V1Rxubl109GgxQ5LiVJzxf36VwMGdVN2x+4ZOtBApNIeGmTfQ3TY8tX48DX5s7msnryuB
      lBJjaor0089Q7O3DuWc3wR//sVVNvitOxQm/cAIzX6T2ocNWWsIVPc4tSwAhBaPJBGfGx4jn
      s7RVh+iqbaDK7Ua9cuZvmlzq7+fUu8dJJhLs3rePA4cO4/F6F7w513PIXC7LW6++Sm9PD3fd
      cy/7DhxAveqBGqbJhfAk5ybHcOl2jrZuo8EXWJa9qyHKBuHn36UwHqPxR+7BXrX4whi4TIpS
      roDd7UTV12dxsZxOo3s8q9byF6cShF94DzObJ/TgYdztjWsui7IQ1oUAiqIQzmY4PznOWDJB
      rdfHnvpGGnx+tCturJSSaCTC6RPv0Xexh+aWVg4dO0ZDY9OiI0k3cshcLssbr7zM8KVBPnDv
      vXTu2XvNzRZSMplOcWJ0iGypyO66RnbXNWCbpwVckjaolOQHJ5l4+k2q79hD8NjixLCWa281
      sFr2iuEEkZdOUk5mCd1/EE9H87y91qYiwORoP45AM5NDFwnUhAhPhampqSGWSLNnTxcqkpOj
      Q1wIT+F1ONhd10BbVc014+xiocDZ909z9vRpdF3j4JGj7Ozqwr6MRazFPrBMOs1rP3yJsdER
      7n3gITo6O+e96blSiVNjI/RFp2irquFAUwsB5+XC7uU4iCiVmXz6LcxCiYYnPoDuWbhQ/Eps
      NgKUYikiL56kFE9PO37TDXWPNg0ByrkI0awNzBKJiUFq2vdwqe8inU01UN2CRzXpj4ZpDlTN
      mcyCNeEaHhrixDtvk0om6ejs5MChw/hWWO20VFWBVDLJqy+9QDQc4e777qejs3Pe40wp6I9G
      eH9iDKeuc6ChmdZg1YpUDLI9I0RfeI+q+267bsnl1djoqhAzMFI5Yi+fohxLE7x7H56OpkVl
      om4qVYjRSxcpKF4oJgnWNjA1Pk5dfR1T0SRduzpQrlKFkFISj8U4c+ok3WfP0NTSyqGjx2hq
      br5mPL5cLLfFikUivPT8c6QSCe5/+BHaOjquuxwfzWZ4Z3iQVCFPZ20dXXWNy15TMLIFJr/7
      BqgqjU/cjepYWDJ9o/cARiZP9JXT5Ecj1NxzAG9ny5LmD5uqB7gRZuYA5XKZC2fPcub0SYQQ
      HDxyjM49e3Cs4uZxML3qmS9gc9jRlrG5wkyY9eUXXyCbSfPghz5Mc+u26z6MXKnEuYlRBhMx
      hJS0VYforK2fM0RarN30mQGir5yet+zySmxUAhjZguX4I2Gq796Hr2vbsuL4txwBnn3maUYG
      B+no7OTgkSMEglWrcnFSSkq5IqnJBInRCInhCMVcEd2uW8lqhgkwu9agqAqKoqDZrJQJ3T7z
      24bu0NFsOrrDhqZr6A4biVScV3/4Ina/iwc/9GFCNbVoNu2aTMOZB5YrleiNhumNTFI2BTtq
      QuwM1VHtXnxlVjmRYfyp17BX+6n78LF5d7XcaAQwsgVir58h2zdG9d378O9rX9EC1lpVhJlC
      YAiBIUwMISgWSvS907P2BJiamCBUV4e2wiGOUSyTDidJjsWIDYfJxTPYVYnPLqlySgJ2gUMD
      RQqUQAC5vQ0aGpHq9AqssHojs2xilg2MYhmzZGCUpv+eec0wMYpljKKBWTZIF9L0xwdIDEdo
      r2qnOlgN02RSFAXNrlPf1ULjnlbsbocV9zcMBuNRLoQnSRcLtASq6Kqtp34RK85SCBLHe0i8
      e4GGJ+7G1VI75/2NQgAjVyD22hkyPSNU37UX/8GOVdnSyCiXMUyTEmAKk7IQGKZJ2TQpC5OS
      aVI2DUqGSck0MISgZBjW68I6TkqJnB5+C2n5oa6qaKpKPpImF05R196Av9q3MZPhhBBkIymS
      E3HiwxHSk3EUIfDaBFVOCNgFbs1EczqgpgZCtRAKgdOFIQR6KgmXBmBiAvx+aGuHxiZYpuNI
      KRkZHuKHzz2H0+nkvocepiZUC1JSyBaYujDK+LlhdIfOtsMd1O5sRLNZZYRl0+RSPEp/NEw0
      m6U5EGRXbR0NvsCcEPDVKMVSjP/Tq7jbGwjdf2i2Vb3ZBDBzRaKvnyFzfpCqu/YSOLRzxVvP
      lgyD0WSCnsgk4XgMl9OFrZBHz+bQsxlshoFNUdE9Huw+P3a/H5vXh93jwabbsGsaNk1H11Ts
      mj6dz6igTjdSCpAcj9P7ylmkEOy8dx/BZkuW/aYTQEpJIZUjNREnPhIhMRrFLJTw2C1HD9oM
      fA7QnA6UQMBy9poa8PpA066JLMx5YEJAPAYDAzC5cjJIKRkc6OeHzz+H1+fnwQ99GH8gMJ0s
      JsnG0oydGSTSP4G72kvLbe1Ub6+bzcUxhGA8leDC1CTjKWs9pKu2gdZg1bwpGLOpFBeGafyR
      e3DUVd00Apj5IrE3z5E+e4ngsS6CRztX5PjpQoFL8Sh90TDZyQm2ZTJ07NhJTUcndpcLBazn
      J0zIFyCbhVwWshnr70LB+lGwhIqdTvB4rB9fANxucLlIxnL0/PB9pJTsum//rOPPYN0JUMoX
      SU8mZp09n8ji0gQBm0nQKfE7sNKVgwGoqobaWggELYddxLjwug4yhwzj4A9CW9uyyCCE4FJf
      Hy+/+DyBQJA77v4gTS0tszdWCEFiNMrY+4MkxqJUb6uleX8bgabLpZOmEEykU/RFphhLJfE5
      nOwM1bK9uganfnnsP6NoMPHU6/j2txO4owt9DXZMv9KeNAVIkMLEKJVJn+gldWaA4JHOZTu+
      lJJwJk1vNMxIIo6mqrTpNnaOjOJzOFAPHwWfD2MRWyRd8aXTJBFQyEMuB5kMMp0m1T9CYSpG
      sNaLMATOar8lzOvxWiRxu8HjXXsCJCfiJEeixEcjZMIpbKKM3y4IOiQBp8Tp0FE9HqtVr6uH
      qiqw2ZatJLe4DTJmyNBv9QyBIGxvWzIZhBAM9PVy8t3jpJMp9h64jf0HD+L2XJ74CsMk3D/B
      6OkBCuk89Z0tNO5rxR28LAYspCSWy9ITnmQgGsFtt9NZW8+OmhCu6QQ+YZhEXjhBdnACRyiA
      nJ7kS8MEOV2tJiWyPP369Aq8lJYzT79oObb1z/Qfcu77AJpmDSM0FVQF357tBI92Ldnxy6bJ
      2HSPF8mmqXJ5aK+uoc3rx9F9HiUagdsOQn3D7PMu58ZQjASqqwXVtvQ1oXwiy7kfvDfb4vsb
      qlCEsHRa83nIZCGfg0wacrm1J8Dff/15ZKlIwGbiMXOoRhmCwctDGbtjVWUTPU6d9sZq/J5F
      hliFgFgMLi2PDDOEy2WznDl9ijMnT+IPBDh8++207eiYnfzPFPZMdI8wenoAKaH5tjbqu5qx
      uy6fq5CSZD5PX3SKS7EoAO01VnjVa3dQjKWgaKDoKiiKlaCmgKJbrebs3sezBT7TXzxzj6d/
      W79m3r983NUt71KHXOligaF4jN7IFJlikdZgFR2hWup9fnQJ9PVaP51d0L4DpkcHohSjOP7P
      mOUMursVURhHmnlUWwDV3Ybm3o7makbR5lfcziWy9L92jkw0xd5Hj+Krmz+HyzAMMqkkqUSc
      ZDy2DgT49l+QSMYvv6iAqs5dNFJUHeWKHVgUFJSrtkBSVRvKHAFZBfWqYxRFI5nJ0jsSweZu
      oLWplT3bQuxqraGh2ot+o/DclWSYmLCIur0dmhpBW1x+vhCCyNQUx996k9HhITo6uzh87Haq
      qi8Pf6SUFDMFxs4OMn52CLvbwbajOwntaJizfiGlJFsq0hsJczE8iZCS7VXVhLw+vA4Hbpsd
      t82+5BTupWAx2a6RbIa+6aGNRNJeXcvOUC1+p8tKcJQSxsbgzGmor4d9B6xeHhDlFKXw84j8
      CPb6x8DZhjZzr6WJNJKY2QHM/BAiP4w0i6jOejT3DjT3dgp5L32vXaSQzrHj7j3UbK+fzTGS
      UpLLZEgnEyRiUXLZDABenx9/sIpAVfXaE+DiuTPYbDb8wSo8Xh8Ol2tNFzkMw0CaOaZG3qWn
      7wxne/sZSbop6O3UN+5iZ0uI3a0h2puq8LoWWL0VAmLRyxPoYPDyBPoKh1vIQcrlMhe7uzn+
      1psoChw8cpS9+w/MGcNLIclEU4ydGSTcN46vNkDLoR1Ut9bOSRabCa8ORMMkiwXSxQL5cpl8
      qYQpJZqioGsaHrsDn8OB1+HA53DitTtw2S2iLBR1Wuh+Xn19prAyei+EJwhnMgRdLtqrQ7P1
      G3OebyIBJ94Fux0OHbHG3oqCFEVK4Zcwkiex1z6EHjyKoqg3LIpHlhGlKMlLJ5k69zZ1O+wY
      pTK+hg40Tzum1sD4ZJFkIo5ZLuP2evH5g/irqvH6fKhXffeaEyCfy5HLpEkl4mTSKYqFAjab
      Da/Pj8fvx+sP4PF41ywVwjSKxCdOMDHwAmOj5xjPVhNX9pKQOxDYaK710dUaYldLNU0h3/zk
      XIAMhpQ3HCJIKUmnU7z39tv0nD9PU0sLh4/dTnPrXLVpYQoSoxFG3x8kNRmnurWW5tva8ddf
      rte9pgRTSiRWz1MWJtlikVSxQLZUIl0okCkVyZaKFIyyFZBQVBy6jtfhwO9w4rFbZPHaHbhs
      dlx2+5y09Bl72VKRoXiMnvAkmWKR5mCQHdW1NPkD8/dAhQKcfA/SaThyDKqrpx2/TDn+FuXY
      69iqP4it6k6UK3b5jGfjJAoxvA4vbrsXzxUSj1JK0lMJel85S7lQounIdhS3SjoxRT55iVCg
      RE3AoJAeRrf7cQR2onvapucT89c8r3sUSE4vbGRTSVLJJJlUkkIuBwo4XS58gSC+QBCP1zen
      lHEhG6lCkqH4IAOxPtKFJLtqu9hVu5sq91zBKiEM0rGLTA48R2z8XVRHHYb3DqKig/7JIlPx
      LH63g50t1XS21rCjqRqP86qIyywZ+mFyEhEIonZ2QV3douYypmkyPDjI8bfeIJ1KsXvvfg4e
      PYrbPXdsa5ZNwr1jjJ0ZpJgrTE+et2Fz25cVBrUWhayfomGQLRVJFwtkikWLJMUiuXKJfLls
      RRYVBYfNhlu3kSwWkFLSXh2iI1RL0DW3duOqC4Tuc9Y6zG2HoKXVcnwpMVKnKE09i+7bg732
      ERTtsqrDZHqCH3Q/zRunXoYUCN0Em4Lq1PB6fPh8fpyKg2xvEq/fh91hR+RMbMJGlb8Wr9OH
      Lm2YhokUJtLMUs5cwqlM0Vir0tjgx1/VSjjlZCyiEkmoZHMbRB1aSokwTfL5HOlEgkw6SSaV
      xjQN7A4HvkAQr9eHxx/A0AyGp529P9JLppTBbfewLbid9poO3LqH3mgPvZEessU0Df4m9jTs
      Z2eok5Cn9nJBuDDJpUeZGnyJ8MhraJqDUOv9OGru4FJU4eJwlIGJBIYhaK3z07UtxM7mahpr
      rijIEQJzagpt8BJMTcL27dDeAb4bF7vM9I5nTp/i7KlTeH0+Dt9+O+0dO+esmkspMUoG42cH
      GTsziJQSh9eFqqmomoamq6i6hqppqLo6/fr0a7p2+TibiqJZ/2v69N+qYg0JNNX6W9dQNAVU
      FalYFXvJfJ5qjwenfv3d1qdPFAYvwZn3oWOnNcmdroM2M90UJ7+H5mrFXv8oqu6bvbbR5DBP
      vf8PnD1/mk59N/uaDlBf30A2kyYZj5NKxDGLBjVN9QQbQnhCPkybSaqQJJFPkCokSOQTZAsZ
      krkE+Vwes2zgsrmo9tQQdFcRcFVR5Q7QVOXHqyRwGVFspRjlQmZjEOB6n00VkvRP9nJ64DgX
      Jy+gODVcdjf2rEqLr5UD7Udort+GzxecdZorxVwNYTCeGuP8xBkuhM+TyMWp9zWwp2E/u2q7
      aPA1zoYKC9kpIiOvExl5HaOUoab5Tuq2P4jubmE0nKJ7KMLFkRiRZA6P08betjo6mqpobwzg
      cTnAMGB0BC72WBfQvsOKJi2mWkwIwlNTHH/zDSbGRmnfueuaifPMPSlk8gjDnNY2EpiGaf1v
      iss/V7xmGubl4654X155vClmNZIswa/p16ZdQ1VVK1A0rYuk23R0pw3dbsPmtFHj06iaukQ4
      XkI9eAg94EO36zhdaUrh7yBx4G75GKqjbrYHPDdymrcm36Cqtpo76+6mLdBOMZclFomgKCDz
      kvDZcWoa69l1934CjdWLUosTUmAIg6JRIJGPzxIlmY+TLCTJFNPkSlkypQyKNDcOATLFDMPx
      SwzE+hiI9hHNRvA6fGyr2k5bTQft1R0EXEE0RcM0DNKpJNl0mnQqQS5jze6dLjcerw+314vT
      7cbpdGKzO2ZvnCEMJlPjdE+do2eqm2g2TI2nlq66PXTV76XJ3wxAuZiyyDD8GoXcFFX1h6jd
      di+B2n0ICclMkZ7hKBeGI/SPxanxu3nk2A72bA9Z0cR8HnovwtiItWLdtdsK+y5iiFQulejp
      7ubE8XcQwuTQ0dvZvW/frMTLeq4ESykxDRNVVWfFw4SY1mkqlDBjccx33qGqqZp47TaSWSuP
      qpQaxSFfo66jhpH+nUyOSkbGhkhrWSack0z5pqgjxDH/MbbvaCcdT5IZT+H3BqlpbCAznkTR
      FHbdux9ffXBNgiYzZLkpBMiX84wkhrgU66c33EM4O4VTd9IS3EZ79Q7aa3ZS4wmhq/qiLl5K
      S6qwkM+RSiT+/+7OrEeuq4jjv7vf3tfp7tmnZ8ZLbMcOiVBCAokgD4AUIb4cEk98BngACckE
      gkXkLBZZ7RmPx9Oz97733c+9PNyxFSdxYjvJAympdV6udE5LVedU/etfVXiOjW1buLaD77nx
      raWqmMkkiWQKM5EkkUyi6jpjf8R2Z4vt1m1OJyfkzBwXK5e4WL3MUn4FQp/+yYe09v/JbLhH
      tvwcldU3yFdfQFF0fD/gsDPhH7f22D3p8/KlJd58sR7nIcIQet0Y9+52Ykh1rf5kLlIYMhj0
      uXnjBvfubrO2scn5ixfQVZVUJksml38k4fZDydcanOfB559CpwNXrsL8PEgSYTDBa19HWIeM
      uMbeccjdrS0ArIzFTnCXklnglfIr5OQcpVqVUqWKIlQCx8N3PFzLpbBQIlV+9lY1TyM/PArk
      WZxMjmn07tPo36c9baHK6kNlXyuuU05XnljZH4gjbIZun77boeu06btd/NBDhIKMnmM5tcZa
      ZpOMlosD7yDAsS1sy8K2ZjiWhevEBiLLMoqqoSdMXMmlMWlwMGnQcbsUM2UuVJ7jueplFrLz
      2INdmnvXGTT/Syq/xuK531NaeBEA1w9497NDbnxyQMrQePOlda6sV1BluPFV7wAAB2pJREFU
      CYQgOtgnuLsV49z1dQapFI7n4joOnuviuQ6BHxAR37aKqqLpOppu4Dgu21tbHO7voSkqyWSC
      bD5PdX6BuWqVuWqNXKHwSOuX70MeMQAhYG8XdnZg8xysb8R+vnDxOtc52bnORztJenZ8lo2L
      F+jpHf7T+DdpN8GrCz9npVanXKthmF8Ph//o6gH+dPOPmJpJvbTBanGdSrr6VMruCIeh26Pv
      duk6rYeKrskaBb1E0ZyjZFQommV0WUeIEDucsTfZ4XC6hxXMmEvUWMtsspBcwVAezRDHVOmQ
      IPBxbBtrNsOxZji2jW3PGEz7HEz3OXZOmMozisU5zlUucmHuPCUkpMCiUHsJ33VxXRf/TKEb
      xx3e/mifkUiyUU1wLh9SSOsoikJaUVmJQDo5YiAE2qXLaAtLGKaBchZsPvh9+ayu6zKbTOj1
      ugz7A/q9LsPBgNFwgO95aLpOpVZjrlKlUCySLxbJ5fLf2k3jcfJwDGzzFD75GOYqcOV50HVm
      kyGy9TG9xt/ZOU5B+ies1DcxTJ1bzff5sP0BVypXeW3pdWrlBZQv5wges9+PygCeNAZwhXum
      6B06TouB28ULPVRJo2CUKBplymaFojGHrujI0tfnDR7pZRlFiEjQtk9pTO9xMjtEliSWU3VW
      MutUzPknCqweGIhlzRjNhjTGe+xPGhwO97GmM0IhCM946ArxuQzdxDBNDCPFnYMxo84czy9c
      Y3HJRs+0UWQJGQmp10NttlGyOeS1DWRNQ5Vj4p8mxxCspmiAFK8RLOaXqGbn0b8wnf4Bkub5
      PsN+n067Rev0hHazSb/XJQgCkqk0mWyWQrFEsVymUCxSKBTJZLOYX57gLgS4DmI8RtneAllB
      XLtGezLlzuefIlmfsVltUam/wUx+gcnEodk+5L3Tm3SUHq+ee4M3Nn9F8ilHNf3/GUAkuPP5
      bSrzNU6OmxRLRfrDCZcuXUT+mknxnnAZnN3oPadNz+3ghe5TK/rj5Bs7tUURrnA4nO3RmNxj
      6PVJqRnqmXMsp+uktafv1eP4Doosx24L4As/PocICIkRiQeIlGvrvP95m3c+26JShl++uEqt
      mEKEASISCGtGdP8eQbsJy8v4iwtEskwgfCIgEB5u4NGcnHA6PkFTNKqZGvXSJmvFOou5JTRF
      /8oZhRBMxyOG/R79bof26SnjdhvJ85BdD83zmM/nWZ+fJ6frTMdjJuMRQtNIV2t0M1m2222a
      J8fMZadcWGhRmr/KVLrGYGDhywEfdN+nLfX4zeW3eHn1NXT1yVyxKIroux2OxsfcbR2zc9pk
      YjuYqk5CTZAyEhiKSVJLklANErpJQk2Q0ExM1cRUjfgykSVURUZCQlVlZElCOevircpnMK90
      9o0E2hnl5DsbQBQGbG/dQZMksgv1r3SFuDfaouUcM/T7jyh6XitSNOYoGWU02UB+zKDop5Wn
      6SoQETFwexzO9ji29rGFRc1cZCW9wXxiEVX+dtrxs3QxEGHIJ7tt3vn4gJnj8Yvnl3nl8hL6
      Ax7QdILcaCAfHxHmC4Sb52Li4Bf2i4jwhUdr0qTRv8/BcJ/T8TFhFFJMlFgt1FnNLLHsaCSn
      LpJtIVkWkgji6jhNQ0qlEIZJdzqmM5lAOo2USuMGcWXVZDxmNBqRz+c5v1EkF75LtzthEFwj
      XVxDzmi817rJwXif19d/yU9Xfha/Xt8gni846o7YbbW412yz2+zgezJ5o8BSKc98KU0uZRCI
      kCgC/4z16p3BsoGIztYQEUYEQmD7Dq5wsHwbV7jYnosjHHwREEUSRBJR+CD/I0MkQaSgy8b3
      YwB7u7tkimV6rTbVWoVmb8TFzXUg4rPeJxQTBUrPeKM/rTwrTBi7SwGn1hGNyS4t+wRFUljN
      rLOWOUdBLz02aHtWWDKKIsYzl+u39ri1fcL6QoE3X6pTny/EH4RhjB7dvQvjEayuIRaXUFQ1
      Lg6xzmi9s3iNPA9feLRVj0YqYN9wOB0d4w46FJJF1pevslY5z3x+iayRhiiAKCQiJBI+jj1j
      1O8yHnSZjAYkEgaZXIqsvI0khbjGa6SKG4zCCX+78xeG1oBfP/cWl2vPo8hf6vXkB5x2pxx3
      xxy0Rhy0R3SmQxRJZq1SZrVaYHEuy2o1Rzqhx7f1d2yN+ECVQ0KiKEREAjuwcIWDLSxcYWML
      GyewcYSNF7o/fAzwhxv/4mg0iutnpfg5SukGuUSCrGmSMUxyCZOcmSBtGDGZyzRJPGPRx/eF
      k0dRhC0sGpMdjmb79JwOZbPyMJhOaenvdT8Rhmztd7l+a4/+xOb1qyu8fGkpJuxFEVEQEN5+
      G697g0j1ARE7XbIMmhrnGzT1Ib347F/EZwwDRq7NvhNy6ISceDIzu0c6GrFsKqymU6wU6uQT
      JZDkeEB3zLEmQkbPv4CSPs/R8JC/3v4zM3fKby/9jovVS7ieoNmfctyZsN8acdQZ0Rz3mQR9
      EhmXpbkc5xdqnJ9fYLWwSFJLfONr/6wGELuZEb6IcIIQN4hwgxBPhDhBhBeEOEGIF0SIKDor
      jYj4Hyk0Rg41fdrWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carrier x Avg Cancellation in 2019' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Departure Delays x Month in 2019' width='192'>
      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
      WAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Security by Airport x Month in 2019' width='192'>
      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
      LFsRDP8PDIFxAMrFPIMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='US Airports Average Delay x Reason in 2019' width='192'>
      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
      qdzzmakbuW8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weather Delays x Month in 2019' width='192'>
      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
      sN+kTccdAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
